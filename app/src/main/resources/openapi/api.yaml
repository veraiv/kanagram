openapi: 3.0.2
info:
  title: Simple Anagram Backend
  description: This simple app checks and finds anagrams.
  version: 1.0.0

 
servers:
  - url: https://localhost/v1

  
paths:
  /health:
    description: Endpoint for health
      Return 200 if service is healty, an error from the 5XX range otherwise.
    get:
      operationId: health 
      responses:
        '200':
          description: Service is Up and running
        '5XX':
          description: Unexpected error
  /info:
    description: Endpoint for info
      Returns basic application information :see title, version and description
    get:
      operationId: infoGet 
      responses:
        '200':
          description: Service is Up and running
          content:
            application/json:
              schema: {}
        '5XX':
          description: Unexpected error

  /anagrams:       
    post:
      operationId: anagramsPost
      summary: This endpoint takes two strings and checks if theyare anagrams of each other
      description: This endpoint takes two strings and returns true if they are anagrams. The strings are preserved within a single run. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/anagramProcessRequest'
        required: true

      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anagramProcessResponse'
          description: Successful
        '400':
          description: Bad request if one of the required fields is missing
  /anagrams/find:
    post:
      operationId: anagramsFind
      summary: Get all in memmory stored anagrams for a provided text. POST request for lenght and security resons.
      description: This endpoint takes a strings and returns all anagrams that were previously reuested. 
      requestBody:
        content:
          application/json:           
            schema:
              $ref: '#/components/schemas/anagramFindRequest'
        required: true      
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anagramFindResponse'
          description: Successful
        '400':
          description: Bad request if one of the required fields is missing               
components:
  schemas:
    anagramFindRequest:
      title: anagramFindRequest
      description:  anagramFindRequest 
      type: object
      required:
        - text
      properties:
        text:
          type: string
      example:
        text: "Hello"  

    anagramFindResponse:
      title: anagramFindResponse
      description:  anagramFindResponse 
      type: object
      required:
        - text
        - anagrams
      properties:
        text:
          type: string
        anagrams:
          type: array
          items:
            type: string
      example:
          string: "Hello"
          anagrams: ["olleH", "Holle" ]   


    anagramProcessRequest:
      title: anagramProcessRequest
      description:  anagramProcessRequest 
      type: object
      required:
        - textA
        - textB
      properties:
        textA:
          type: string
        textB:
          type: string
      example:
          textA: "Hello"
          textB: "World"  

    anagramProcessResponse:
      title: anagramProcessResponse
      description:  anagramProcessResponse 
      type: object
      required:
        - textA
        - textB
        - result
        - message
      properties:
        textA:
          type: string
        textB:
          type: string
        result:
          type: boolean
        message:
          type: string             
      example:
          stringA: "Hello"
          stringB: "World"
          result: false
          message: "The strings 'Hello' and 'World' are not anagrams"   
